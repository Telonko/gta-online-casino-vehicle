import time
import cv2
import sys
import os
import io
import numpy as np
import pyautogui

############################################### 

# Only for linux
#import pyscreenshot as ImageGrab

# Windows and Mac
from PIL import ImageGrab

###############################################

x = None
template = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x19\x00\x00\x00\x1b\x08\x02\x00\x00\x00\x06C\xb3?\x00\x00\x04\xe2IDATH\ru\xc1\xbdkT_\x1a\x07\xf0\xef\xf3\xdcs\xdf&\x0c\x11_\n\x11\xe3\xcbf7\x8d(\x16\x01\xbb\x88\x08"Z)r@\xd9Ub6\x82\x85\x88\x85\xa0\xc4N\xc2\xae\x08\'\xc8\xa2\x8dE\x10,\x12\x10d\x1a\x0b;\xfd\x03\x04\x1b\xb1\x88`e\x041\xc4d2s\xef\xb9\xe7|\xf7\xc7@\x16\x7f0\xfb\xf9\xc8\xdf\xffqm~~>\xcf\xf3\xaa\xaa0 "\xf8\rIl\x13\x11l\xab\xeb\xba\xd5j\xd5u\x9deY\xaf\xd7\xcb\xf3\\\x1e?~l\xad\x15\x11U\xc50\x84b\x98\xb2,\x7f\xfd\xfa\x05 \xcb2U\xf5\xde\xcb\xfc\xfc\xfc\xf5\xeb\xd7\xbd\xf7"\x82a"\x05\xc3\xd4u\x9d\xe7y\x08\xa1,\xcb\x8d\x8d\x8d4M\xe5\xe9\xd3\xa7g\xcf\x9e-\x8a"\xc6\x88aD\x12l\x13\x11l#\xa9\xaa1F\xef}\x96e\xc6\x18q\xce]\xb9r\xa5\xdf\xef\xab\xaa\x88\xe0\xcfD$F\xfc\x8f\x88`\x1bI\x11!)"\xaa\xda\xeb\xf5\xc49g\xad\xe5@\x92$\x00B\x08"\x12B\x00\x90\xa6iUU\xadV\xcb{ORDb\x8c\x00T\x15\x00IU%\x89\x01q\xceYkI\x1ac\xba\xddnY\x96UU\xb5\xdb\xed\xba\xae\x01\x88\xc8\xf7\xef\xdf?}\xfaTU\xd5\xce\x9d;\x0f\x1e<\xb8w\xef^\xef}\xd34\xaaJRUIb@\x9cs\xd6Z\x92!\x84$I\xb2,\xeb\xf5z"\xa2\x03\x8b\x8b\x8b/^\xbc\xf850:::66v\xeb\xd6\xad\xd3\xa7Ow\xbb]c\x0cIU%\x89\x01q\xceYkI\xc6\x18\x93$\x01\x10c\x14\x91$I\xde\xbe}{\xed\xda\xb5\x89\x89\x89\xd9\xd9\xd9\xb1\xb1\xb1\x0f\x1f><{\xf6\xac(\x8a\xc5\xc5\xc5\xa3G\x8fz\xefI\xaa*I\x0c\x88s\xceZK\xd2\x18\xd3\xef\xf7\x8d11\xc6<\xcfC\x08w\xee\xdcY^^~\xfd\xfa\xf5\xc4\xc4D\xbb\xdd\x16\x91N\xa7s\xe3\xc6\x8d\xb9\xb9\xb9\x9b7o\xc6\x18I\xaa*I\x0c\x88s\xceZKRD\xb0\xadi\x1a\x00\xf7\xee\xdd[^^^ZZ\x9a\x9a\x9a\xf2\xde\xf7\xfb\xfd^\xaf\xd7\xe9t\xc6\xc7\xc7O\x9c8\x01\x80\xa4\xaa\x92\xc4\x808\xe7\xac\xb5$\x01\xa8j\xbf\xdfo\xb5ZM\xd3\x00\xe8t:\xb7o\xdf\x1e\x1b\x1b\x9b\x9e\x9e\x9e\x9c\x9c\xdc\xbd{wY\x96\xa3\xa3\xa3\x18\x08!\x90TU\x92\x18\x10\xe7\x9c\xb5\x96\xa4\xaa\xd6u\x9d\xa6)\x7f\xf3\xea\xd5\xab7o\xde\xbc\x7f\xff>\xc6x\xe0\xc0\x81\xc9\xc9\xc9\xa9\xa9\xa93g\xce\xe8\x00IU%\x89\x01q\xceYkI\xaaj\x8c\xd1{\x9f\xe7\xb9\x88x\xef\xd34%\xb9\xbe\xbe\xbe\xba\xba\xfa\xe5\xcb\x97\x8f\x1f?\xbe|\xf9\x12\xc0\xdc\xdc\xdc\x85\x0b\x17T\x95\xa4\xaa\xc6\x18E\x04\x808\xe7\xac\xb5$U5\xc6\xd8j\xb5\xb6\xb6\xb6\xaa\xaaR\xd5\x9f?\x7fnnn\xee\xdb\xb7o\xd7\xae][[[u]\xaf\xad\xad\x9d:u\xea\xe4\xc9\x93\x8f\x1e=j\xb5Z$U5\xc6("\x00\xc49g\xad%)"\x00\xba\xddn\x96eeY\xae\xae\xae\xce\xcc\xccx\xef;\x9dN\x08\xa1,\xcb\xad\xad\xad<\xcf\xcf\x9d;\xb7c\xc7\x8e\xe7\xcf\x9f\x17EARUc\x8c"\x02@\x9cs\xd6Z\x92M\xd3\x14E\xe1\xbd/\x8ab}}\xdd\x18s\xf7\xee\xdd\xa5\xa5\xa5\x87\x0f\x1f^\xbe|9\xcb2cL\xa7\xd3\x99\x9d\x9d\x9d\x9e\x9e\xbe\x7f\xff~Y\x96$U5\xc6("\x00\xc49g\xad%\xa9\xaa\x00\xea\xba\xce\xf3<\xc6\xa8\xaa_\xbf~\x9d\x99\x99YYY\xd9\xb3g\xcf\xfe\xfd\xfb\x7f\xfc\xf8\xb1\xb2\xb2r\xe4\xc8\x91\x85\x85\x85\xf1\xf1q\x00$U5\xc6("\x00\xc49g\xad%\t@DHz\xef\x8b\xa2\xd8\xd8\xd8h\xb7\xdb\xdf\xbe}{\xf7\xee\xdd\xe7\xcf\x9f\x9b\xa6I\xd3\xf4\xf0\xe1\xc3\xc7\x8e\x1d;t\xe8P\xbb\xdd\xf6\xde\x93T\xd5\x18\xa3\x88\x00\x10\xe7\x9c\xb5\x96$\x00\xef}\xbb\xddn\x06\xca\xb2\\[[k\xb7\xdb!\x84^\xafG2\xcf\xf3\x10\xc2\xc8\xc8H\x08\xa1i\x1a\x00$U5\xc6("\x00\xc49g\xad%\t I\x92\xba\xaeIfY\x16B\x10\x11\x00!\x84,\xcbH\xc6\x18\xd34\xdd\xdc\xdc\x1c\x19\x19\xa9\xaa*I\x12\x92\xaa\x1ac\x14\x11\x00\xb2\xb0\xf0\xe4\xd2\xa5K!\x844M9\x80?\x13F\x0c\x13cL\xd3\x14@\xbf\xdf/\x8a\x82\xa4<y\xf2\x9f\x8b\x17/\xa6iZU\x95\x88\x00\x10\x11\x0c\x88\x08\xfe\x10\x03\xfe\x8f8`\x8cQ\xd5\x10\x82<\xfa\xd7\xbf\xaf^\xbdZ\xd7\xb51\x06\x80\x88\x00 \t\x80$\xfe\xa0\t\x86!\x99$\x89\xaa\x1ac\xba\xdd.I\x99\x9d\xf9\xe7\x83\x07\x0f\x8a\xa2\xf0\xdec\x80$\x00\x92\x00HJb0\x8c1\xc6{\xdf4\x8d\x88\xa8jY\x962\xf1\xd7\xbf\x9d?\x7f\xfe\xf8\xf1\xe3"\x82\xdf\x88\x08\x00\x11\x89\x10b\x888P\x14E\xd34\xaa\xda4\x8d\x8c\x1f\xfeKQ\x14UU\x19c\x00\x90\xc4oD$\x10\xc4\x10\xc6\x18\xef}Q\x14\xbd^\x0f@\x9e\xe7\xff\x052x\xe7\xce\xcf\x8c\xa5t\x00\x00\x00\x00IEND\xaeB`\x82'
template = np.asarray(bytearray(template), dtype="uint8")
template = cv2.imdecode(template, 0)

print ('Started. Auto close in 2min\n\nGet your ass to the wheel\n\nDo not push "S" button!!!\nOnly "E" then "Enter"!!!\n')
time.sleep(2)

for _ in range(1000):
    screen = ImageGrab.grab(bbox=(0, 0, 750, 150))
    img_bytes = io.BytesIO()
    screen.save(img_bytes, format='PNG')

    img_rgb = cv2.imdecode(np.frombuffer(img_bytes.getvalue(), dtype=np.uint8), cv2.IMREAD_COLOR)
    img_gray = cv2.cvtColor(img_rgb, cv2.COLOR_BGR2GRAY)

    res = cv2.matchTemplate(img_gray, template, cv2.TM_CCOEFF_NORMED)
    loc = np.where(res >= 0.87)

    for __ in range(5):
        if x is None:
            for pt in zip(*loc[::-1]):
                x = int(pt[0])

        else:
            print('getting the vehicle')
            time.sleep(3.1)
            pyautogui.press('s')
            sys.exit()
    time.sleep(0.05)
    x = None
